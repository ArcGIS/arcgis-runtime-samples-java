plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.5'
}

group = 'com.esri.samples'

ext {
    arcgisVersion = '100.5.0'
}

javafx {
    version = "11.0.1"
    modules = [ 'javafx.controls', 'javafx.web', 'javafx.fxml', 'javafx.swing' ]
}

compileJava.options.encoding = 'UTF-8'

repositories {
    jcenter()
    maven {
        url 'https://esri.bintray.com/arcgis'
    }
    maven {
        url 'http://olympus.esri.com/artifactory/arcgisruntime-repo'
    }
}

configurations {
    natives
}

dependencies {
    compile "com.esri.arcgisruntime:arcgis-java:$arcgisVersion"
    natives "com.esri.arcgisruntime:arcgis-java-jnilibs:$arcgisVersion"
    natives "com.esri.arcgisruntime:arcgis-java-resources:$arcgisVersion"
}

task downloadData {
    description = "Downloads data from AGOL for samples with offline data"

    def samplesData = './samples-data'
    if (!file(samplesData).exists()) {
        mkdir(samplesData)
    }
    downloadSampleData([new Download(id: '296269901180442a88a3351640ff2262')], 'bristol')
}

def nativeLibrariesPath = "${System.properties.getProperty("user.home")}/.arcgis/$arcgisVersion";

task copyNatives(type: Copy) {
    description = "Copies the arcgis native libraries into the project build directory for development."
    group = "build"
    configurations.natives.asFileTree.each {
        from(zipTree(it))
    }
    // store native libraries in a common location shared with other samples
    into nativeLibrariesPath
}

run {
    dependsOn copyNatives
    mainClassName = 'com.esri.samples.Animate3dGraphicSample'
    // set environment variable so native libraries can be found at runtime
    environment "ARCGISRUNTIMESDKJAVA_100_5_0", nativeLibrariesPath
}

wrapper {
    gradleVersion = '5.0'
}

// downloads a portal item's contents to a folder in samples-data
void downloadSampleData(List<Download> downloads, folderName) {
    def downloadFolder = "./samples-data/$folderName"
    if (!file(downloadFolder).exists()) {
        downloads.each { download ->
            def downloadFileName = "${download.name}.${download.ext}"
            ant.get(src: "https://arcgisruntime.maps.arcgis" +
                    ".com/sharing/rest/content/items/${download.id}/data",
                    dest: downloadFileName)
            if (download.ext == "zip") {
                copy {
                    from zipTree(downloadFileName)
                    into(downloadFolder)
                }
            } else {
                copy {
                    from downloadFileName
                    into downloadFolder
                }
            }
            delete(downloadFileName)
        }
    }
}

class Download {
    String id
    String name = "data"
    String ext = "zip"
}
