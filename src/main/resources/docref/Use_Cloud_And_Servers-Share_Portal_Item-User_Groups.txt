//[DocRef: Name=Use_Cloud_And_Servers-Share_Portal_Item-User_Groups
// Get a list of all the groups the item is shared with
final ListenableFuture&lt;PortalItemGroups&gt; itemGroupsFuture = portalItem.fetchGroupsAsync();
itemGroupsFuture.addDoneListener(new Runnable() {
  @Override
  public void run() {
    try {
      PortalItemGroups portalItemGroups = itemGroupsFuture.get();

      // Build a message with the groups that this portal item belongs to
      StringBuilder messageBuilder = new StringBuilder(String.format("'%s' is a member of the following groups:\n", portalItem.getTitle()));
      List&lt;PortalGroup&gt; adminGroups = portalItemGroups.getAdmins();
      for (PortalGroup adminGroup : adminGroups) {
        messageBuilder.append(adminGroup.getTitle() + "\n");
      }
      List&lt;PortalGroup&gt; memberGroups = portalItemGroups.getMembers();
      for (PortalGroup memberGroup : memberGroups) {
        messageBuilder.append(memberGroup.getTitle() + "\n");
      }
      List&lt;PortalGroup&gt; otherGroups = portalItemGroups.getOthers();
      for (PortalGroup otherGroup : otherGroups) {
        messageBuilder.append(otherGroup.getTitle() + "\n");
      }
      showMessage(messageBuilder.toString());

    } catch (InterruptedException | ExecutionException e) {
      dealWithException(e);
    }
  }
});
//[DocRef: Name=Use_Cloud_And_Servers-Share_Portal_Item-User_Groups